/**
 * Build an SVG. Based on Noah Blon's work.
 * @see http://codepen.io/noahblon/pen/xGbXdV
 * @param  {String}  $icon
 * @param  {Number}  $width
 * @param  {Number}  $height
 * @return {String}
 */
@function _buildSvg($icon, $width, $height) {
  $icon: "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{$width} #{$height}'>#{$icon}</svg>";
  @return $icon;
}

/**
 * Build an SVG path. Based on Noah Blon's work.
 * @see http://codepen.io/noahblon/pen/xGbXdV
 * @param  {String} $path
 * @param  {Map}    $parameters
 * @return {String}
 */
@function _buildPath($path, $parameters) {
  $icon: "<path fill='#{map-get($parameters, color)}' stroke='#{map-get($parameters, stroke-color)}' stroke-width='#{map-get($parameters, stroke-width)}' style='#{map-get($parameters, css)}' d='#{$path}' />";
  @return $icon;
}

/**
 * Optimize SVGs in data URIs. Based on Taylor Hunt's and jakob-e's work.
 * @see http://codepen.io/tigt/post/optimizing-svgs-in-data-uris
 * @see http://codepen.io/jakob-e/pen/doMoML?editors=0100
 * @param  {String}  $svg
 * @param  {Number}  $width
 * @param  {Number}  $height
 * @return {String}
 */
@function svg($svg, $width, $height) {
  $svg: _buildSvg($svg, $width, $height);

  $svg: str-replace($svg, '"', "'");
  $svg: str-replace($svg, '<', '%3C');
  $svg: str-replace($svg, '>', '%3E');
  $svg: str-replace($svg, '&', '%26');
  $svg: str-replace($svg, '#', '%23');

  @return url("data:image/svg+xml;charset=utf8,#{$svg}");
}
