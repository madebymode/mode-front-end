/**
 * Build an SVG. Based on Noah Blon's work.
 * @see http://codepen.io/noahblon/pen/xGbXdV
 * @param  {String}  $icon
 * @param  {Number}  $width
 * @param  {Number}  $height
 * @return {String}
 */
@function build-svg($icon, $width, $height) {
  $icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 #{$width} #{$height}">#{$icon}</svg>';
  @return $icon;
}

/**
 * Build an SVG path. Based on Noah Blon's work.
 * @see http://codepen.io/noahblon/pen/xGbXdV
 * @param  {String} $path
 * @param  {Map}    $parameters
 * @return {String}
 */
@function build-path($path, $parameters) {
  $icon: '<path fill="#{map-get($parameters, color)}" stroke="#{map-get($parameters, stroke-color)}" stroke-width="#{map-get($parameters, stroke-width)}" style="#{map-get($parameters, css)}" d="#{$path}" />';
  @return $icon;
}

/**
 * Optimize SVGs in data URIs. Based on Taylor Hunt's and jakob-e's work.
 * @see https://codepen.io/tigt/post/optimizing-svgs-in-data-uris
 * @see https://codepen.io/jakob-e/pen/doMoML
 * @param  {String}  $svg
 * @param  {Number}  $width
 * @param  {Number}  $height
 * @return {String}
 */
@function svg($svg, $width, $height) {
  $svg: build-svg($svg, $width, $height);

  $svg: str-replace($svg, '"', "'"); // stylelint-disable-line
  $svg: str-replace($svg, '%', '%25');
  $svg: str-replace($svg, '&', '%26');
  $svg: str-replace($svg, '#', '%23');
  $svg: str-replace($svg, '{', '%7B');
  $svg: str-replace($svg, '}', '%7D');
  $svg: str-replace($svg, '<', '%3C');
  $svg: str-replace($svg, '>', '%3E');

  @return url('data:image/svg+xml;charset=utf8,#{$svg}');
}
