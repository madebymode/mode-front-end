/**
 * Generic property utility.
 * @param  {String}  $property
 * @param  {String}  $alias
 * @param  {String}  $value
 * @param  {String}  $at-breakpoint
 */
@mixin u-property($property, $alias, $value, $at-breakpoint: null) {
  $class-name: 'u-#{$property}-#{$alias}';
  @include breakpoints($class-name, $at-breakpoint) {
    #{$property}: #{$value};
  }
}

// Examples:

// @include u-property('flex-wrap', 'nowrap', 'nowrap', 'sm');

/**
 * Directional property utility.
 * Valid aliases: `top`, `gray`, `gray-3`, `top-gray`, `top-gray-3`.
 * @param  {String}  $property
 * @param  {String}  $alias
 * @param  {String}  $value
 * @param  {String}  $at-breakpoint
 */
@mixin u-property-directional($property, $alias, $value, $at-breakpoint: null) {
  $class-name: 'u-#{$property}';

  @if ($alias and str-length($alias) > 0) {
    $class-name: '#{$class-name}-#{$alias}';
  }

  $directions: ('vertical', 'horizontal', 'top', 'right', 'bottom', 'left');
  $direction: null;
  $temp-direction: $alias;

  // Check whether $alias starts with a direction
  $index: str-index($alias, '-');
  @if ($index) {
    $temp-direction: str-slice($alias, 1, $index - 1);
  }

  @each $x-direction in $directions {
    @if not $direction and $temp-direction == $x-direction {
      $direction: $x-direction;
    }
  }

  // Set properties based on direction
  @include breakpoints($class-name, $at-breakpoint) {
    @if ($direction == 'vertical') {
      #{$property}-top: #{$value};
      #{$property}-bottom: #{$value};
    } @else if ($direction == 'horizontal') {
      #{$property}-right: #{$value};
      #{$property}-left: #{$value};
    } @else if ($direction) {
      #{$property}-#{$direction}: #{$value};
    } @else {
      #{$property}: #{$value};
    }
  }
}

// Examples:

// @include u-property-directional('border', 'top', 1px solid $color-gray-3, 'sm');
