// ------------------------------
// Math
// ------------------------------

/**
 * Remove the unit of a length
 * Based on http://hugogiraudel.com/2013/08/12/sass-functions/
 * @param  {Number}  $value  Number to remove unit from
 * @return {Number}          Unitless number
 */
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}



// ------------------------------
// Strings
// ------------------------------

/**
 * Split `$string` into several parts using `$delimiter`.
 *
 * Based on https://github.com/HugoGiraudel/SassyStrings/blob/c587b74ad96532eb47ec8509deb8c212ba75478c/stylesheets/private/_str-explode.scss
 *
 * @param  {String}  $string         - String to split
 * @param  {String}  $delimiter ('') - String to use as a delimiter to split `$string`
 * @return {List}
 */
@function explode($string, $delimiter: '') {
  $result: ();
  $length: str-length($string);

  @if str-length($delimiter) == 0 {
    @for $i from 1 through $length {
      $result: append($result, str-slice($string, $i, $i));
    }

    @return $result;
  }

  $running: true;
  $remaining: $string;

  @while $running {
    $index: str-index($remaining, $delimiter);

    @if $index {
      $slice: str-slice($remaining, 1, $index - 1);
      $result: append($result, $slice);
      $remaining: str-slice($remaining, $index + str-length($delimiter));
    } @else {
      $running: false;
    }
  }

  @return append($result, $remaining);
}

/**
 * Replace `$search` with `$replace` in `$string`.
 *
 * Based on https://github.com/HugoGiraudel/SassyStrings/blob/5c85bcae6ab51ef3996719ec31cce7aafd1a9fad/stylesheets/private/_str-replace.scss
 *
 * @param  {String}  $string       - Initial string
 * @param  {String}  $search       - Substring to replace
 * @param  {String}  $replace ('') - New value
 * @return {String} - Updated string
 */
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}



// ------------------------------
// Fonts
// ------------------------------

/**
 * Convert px values (e.g. from a PSD) to ems.
 * Based on http://viljamis.com/blog/2013/prototyping-responsive-typography/
 * @param  {Number}  $pixels
 * @param  {Number}  $context  Defaults to $font-size
 * @return {Number}            em value
 */
$font-size: 16 !default;
@function em($pixels, $context: $font-size) {
  // Note: `strip-units` is what's causing the invalid multiplication errors. What's the deal?
  // @return strip-units($pixels) / strip-units($context) * 1rem;
  @return $pixels / $context * 1em;
}

/**
 * Convert tracking (e.g. from a PSD) to ems for letter-spacing.
 * @param  {Number} $tracking
 * @return {Number}            em value
 */
@function tracking($tracking) {
  @return ($tracking / 1000) * 1em;
}
